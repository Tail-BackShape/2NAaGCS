自動離着陸
	GUI
	・app.pyにもう一つQTabWidgetでタブを作って自動離着陸専用の画面を作る。
	・ほかの自動系ミッションとは別の機会に行うので間違ってオンにしないように自動離着陸有効ボタンを作っておく。
	・後述するキャリブレーションを行えるパネルを作る。キャリブレーションデータはautoGoCoef.txtから取得・更新ができるようにする。
	・推定した距離と計測している高度をつかって現在位置可視化を作成する（XY平面とZY平面）
	・係数などはautoGoCoef.txtに保存する。app.pyと同様にパネルでパラメータの調整・保存を行えるようにする。
	・現在位置可視化は2D姿勢表示もする（ロールはいらない）
	・右側に各パネルを配置し、位置姿勢表示を真ん中に、操縦量を左側に配置

	座標系
	・着陸滑走路の終端を原点として離陸滑走路の始端が33mの位置。
	・着陸滑走路の中心軸をX軸の0として扱う
	・離陸滑走路側がYの正方向で離陸滑走路から見て右側がXの正方向
	・用意するArUcoマーカーは3つ。
		１．X:-3, Y:6 (ID 1)
		２．X:0, Y:0 (ID 2)
		３．X:3, Y:6 (ID 3)
	
	距離推定
	・マーカーのデータが0の時は有効なデータではないので距離推定には使用しない。
	・キャリブレーションを次のように行う。
		１．任意の距離の時のマーカーサイズを記録しておく。
		２．複数マーカーが使えるときは重みを等分する。
			２つなら5:5,３つなら3:3:4でサイズが大きいものを優先する
			サイズは送信されてくるので比較する
		３．指定の距離だけ離した時のサイズをボタンで記録する。
	・距離推定の式は距離 = 基準距離 × (基準サイズ / 現在のサイズ)
		基準距離はボックスを用意して変更可能にする。
		基準距離と基準サイズを3点ほど持っておけるようにして各基準間で線形にする。（グラフ表示）
		
		
	操縦ルール
	・離陸時はスロットルを強にして一気に上昇する。1000程。調整可能にする。
	・投下前と投下後で機体重量が変化するので標準スロットル量を前後で使い分ける。投下前700、投下後650。調整可能にする。
	・投下後はX:0（ID 2がカメラ画像座標の真ん中来る）を目指してラダーで滑らせる。
		マーカー座標はカメラ取得画像（400x300）における位置
	・ロールは0度を常に保つようにする。
	・定常飛行時は高度1.5mを保つ。高度維持のゲインはとりあえず仮置き
	・制御に必要な各パラメータはパネルで調整できるようにする。
	
	自動離着陸のフェーズ
	・フェーズは推定距離によって自動で切り替える。閾値はパネルで変更できるようにする。
	・離陸フェーズ
	・投下フェーズ
	・定常フェーズ
	・着陸フェーズ
